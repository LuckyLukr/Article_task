[{"C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\index.js":"1","C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\App.js":"2","C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Article-component\\Article.component.jsx":"3","C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Comments-component\\Comments.component.jsx":"4","C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Comments-component\\More-comments-component\\More.comments.component.jsx":"5"},{"size":169,"mtime":1611828268210,"results":"6","hashOfConfig":"7"},{"size":4714,"mtime":1611837757320,"results":"8","hashOfConfig":"7"},{"size":713,"mtime":1611837780074,"results":"9","hashOfConfig":"7"},{"size":715,"mtime":1611828730203,"results":"10","hashOfConfig":"7"},{"size":723,"mtime":1611828752941,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"wcpa54",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\index.js",[],["25","26"],"C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\App.js",["27","28"],"import React, { useState, useEffect} from 'react';\nimport moment from 'moment';\nimport './App.css';\n\nimport Article from './Components/Article-component/Article.component';\nimport Comments from './Components/Comments-component/Comments.component';\nimport MoreComments from './Components/Comments-component/More-comments-component/More.comments.component';\n\nfunction App() {\n  const [comments, setComments ] = useState(document.__comments);\n  const [moreComments, setMoreComments ] = useState(document.__moreComments);\n  const [showMoreComments, setShowMoreComments] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [articleLoaded, setArticleLoaded] = useState(false);\n  const [commentsLoaded, setCommentsLoaded] = useState(false);\n\n\n  useEffect(() => {\n\n      //Sorting comments from newest to oldest\n      comments.push(...moreComments);\n      comments.sort((a, b) => {\n          let dateA = a.date.toUpperCase();\n          let dateB = b.date.toUpperCase();\n          if (dateA < dateB) {\n            return 1;\n          }\n          if (dateA > dateB) {\n            return -1;\n          }\n          return 0;\n      });\n\n      const removed = comments.splice(2)\n      setMoreComments(removed);\n      //End of sorting comments from newest to oldest\n\n      //Async functions with setTimeout to simulate data loading on page\n      const helloArticle = () => {\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(setLoaded(true));\n          }, 2000);\n        });\n      }\n      const loadingArticle = async() => {\n        const hello = await helloArticle();\n        return () => clearTimeout(hello);\n      }\n\n      const helloComments = async() => {\n        await helloArticle();\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(setArticleLoaded(true));\n          }, 2000);\n        });\n      }\n      const loadingComments = async() => {\n        const hello = await helloComments();\n        return () => clearTimeout(hello);\n      }\n      \n      const helloMoreComments = async() => {\n        await helloComments();\n        return new Promise(resolve => {\n          setTimeout(() => {\n            resolve(setCommentsLoaded(true));\n          }, 2000);\n        });\n      }\n      const loadingMoreComments = async() => {\n        const hello = await helloMoreComments();\n        return () => clearTimeout(hello);\n      }\n       \n      loadingArticle();\n      loadingComments();\n      loadingMoreComments();\n      //End of Async functions with setTimeout to simulate data loading on page\n      \n  }, []);\n\n  const handleShowMoreComments = () => showMoreComments ? setShowMoreComments(false) : setShowMoreComments(true);\n\n\n  const commentsList = comments.map( element => \n    <Comments \n      id={element.id}\n      author={element.author}\n      time={moment.utc(element.date).format('HH:mm')}\n      date={moment.utc(element.date).format('DD/MM/YYYY')}\n      text={element.text}    \n    />\n  );\n    \n  const moreCommentsList = moreComments.map( element => \n    <MoreComments \n      id={element.id}\n      author={element.author}\n      time={moment.utc(element.date).format('HH:mm')}\n      date={moment.utc(element.date).format('DD/MM/YYYY')}\n      text={element.text}    \n    />\n  );\n\n\n  return (\n    <div className=\"app\">\n\n      <div style={{display:loaded ? 'none' : 'block' }} className='onLoading'>\n          <img src='https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif' alt='Loading...' style={{height: '50px'}} />\n      </div>\n\n      <div style={{display:loaded ? 'flex' : 'none' }} className='content'>\n        <Article />\n        <div  style={{display:articleLoaded ? 'grid' : 'none' }} className='commentsContainer'>\n\n          <ul>\n              {commentsList}\n              { showMoreComments ? moreCommentsList : null }\n          </ul>\n\n          <div style={{display:commentsLoaded ? 'grid' : 'none' }} className='showMoreBtnContainer'>\n              <button type='submit' className='showMoreBtn' onClick={() => handleShowMoreComments()} >\n                  { showMoreComments ? <span>Hide comments</span> : <span>More comments</span>}\n              </button>\n          </div>\n          \n          <div style={{display:commentsLoaded ? 'none' : 'block' }} className='onLoading'>\n              <img src='https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif' alt='Loading...' style={{height: '50px'}} />\n          </div>\n\n      </div>\n\n      <div style={{display:articleLoaded ? 'none' : 'block' }} className='onLoading'>\n           <img src='https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif' alt='Loading...' style={{height: '50px'}} />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Article-component\\Article.component.jsx",[],"C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Comments-component\\Comments.component.jsx",[],["29","30"],"C:\\Users\\mrluk\\Documents\\projects\\react-assignment\\react-assignment\\src\\Components\\Comments-component\\More-comments-component\\More.comments.component.jsx",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":10,"column":20,"nodeType":"37","messageId":"38","endLine":10,"endColumn":31},{"ruleId":"39","severity":1,"message":"40","line":82,"column":6,"nodeType":"41","endLine":82,"endColumn":8,"suggestions":"42"},{"ruleId":"31","replacedBy":"43"},{"ruleId":"33","replacedBy":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'setComments' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comments' and 'moreComments'. Either include them or remove the dependency array.","ArrayExpression",["47"],["45"],["46"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [comments, moreComments]",{"range":"50","text":"51"},[2591,2593],"[comments, moreComments]"]